<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haiyi.dao.ComsumeLogMapper">

  <resultMap id="BaseResultMap" type="com.haiyi.domain.ComsumeLog" >
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="comsumeLog" property="comsumeLog" jdbcType="VARCHAR" />
      <result column="orderId" property="orderId" jdbcType="VARCHAR" />
      <result column="memberId" property="memberId" jdbcType="INTEGER" />
      <result column="memberName" property="memberName" jdbcType="VARCHAR" />
      <result column="devName" property="devName" jdbcType="VARCHAR" />
      <result column="devNum" property="devNum" jdbcType="VARCHAR" />
      <result column="payType" property="payType" jdbcType="INTEGER" />
      <result column="payAmount" property="payAmount" jdbcType="DECIMAL" />
      <result column="cardNum" property="cardNum" jdbcType="VARCHAR" />
      <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
      <result column="tradeType" property="tradeType" jdbcType="TINYINT" />
      <result column="payStatus" property="payStatus" jdbcType="TINYINT" />
      <result column="agentId" property="agentId" jdbcType="INTEGER" />
      <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  
  <resultMap id="MonthResultMap" type="com.haiyi.domain.vo.OrderMonthStasticVO" >
      <result column="payType" property="payType" jdbcType="INTEGER" />
      <result column="payStatus" property="payStatus" jdbcType="TINYINT" />
      <result column="agentId" property="agentId" jdbcType="INTEGER" />
      <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
      id,
      comsumeLog,
      orderId,
      memberId,
      memberName,
      devName,
      devNum,
      payType,
      payAmount,
      cardNum,
      createDate,
      tradeType,
      payStatus,
      agentId,
      modifyTime
  </sql>
  
  <!--根据Id查询-->
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
      select <include refid="Base_Column_List" /> from comsume_log where id = #{id,jdbcType=INTEGER}
  </select>

  <!--根据orderId查询未出货订单明细信息-->
  <select id="findUnOutputedInfo" resultType="java.util.Map" parameterType="java.lang.String" >
      select (d.buyCount-d.outputCount)as outputCount,d.orderNum from comsume_detail d ,comsume_log l where d.orderId =l.orderId and l.orderId = #{orderId,jdbcType=VARCHAR}  and d.buyCount>d.outputCount
  </select>

   <!--根据Id查询-->
  <select id="findByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String" >
      select <include refid="Base_Column_List" /> from comsume_log where orderId = #{orderId,jdbcType=VARCHAR}
  </select>
  
  <!-- 查找日统计订单 -->
  <select id="findDaySummaryInfo" resultType="java.util.Map">
      select count(*) count,CASE payStatus WHEN 2 THEN "finish" WHEN 3 THEN "invalid" WHEN 4 THEN "error" END as payStatus from comsume_log where agentId = #{agentId,jdbcType=INTEGER} and DATE_FORMAT(createDate,'%Y-%m-%d') = #{currentDay,jdbcType=VARCHAR} group by payStatus having  payStatus IN (2, 3, 4)
  </select>
  
  <!-- findFirstPaiedComsumeLog -->
  <select id="findLastComsumeLogByPayStatus" resultType="java.util.Map">
      select l.id,l.orderId,l.comsumeLog from comsume_log l,dev d where l.devNum = d.num and l.payStatus = #{payStatus,jdbcType=TINYINT} and d.num = #{num,jdbcType=INTEGER} order by l.createDate desc limit 0,1
  </select>
  
  <!-- 多条件查询 -->
  <select id="findBySelective" resultMap="BaseResultMap" parameterType="com.haiyi.query.ComsumeLogQuery">
      select <include refid="Base_Column_List" /> from comsume_log
      <trim prefix="where" prefixOverrides="and |or ">
         <if test="comsumeLog != null">
            and comsumeLog = #{comsumeLog,jdbcType=VARCHAR}
         </if>
         <if test="orderId != null">
            and orderId = #{orderId,jdbcType=VARCHAR}
         </if>
         <if test="devNum != null">
            and devNum = #{devNum,jdbcType=VARCHAR}
         </if>
         <if test="cardNum != null">
            and cardNum = #{cardNum,jdbcType=VARCHAR}
         </if>
         <if test="agentId != null">
            and agentId = #{agentId,jdbcType=INTEGER}
         </if>
         <if test="payStatus != null">
            and payStatus = #{payStatus}
         </if>
         <if test="memberId != null">
            and memberId = #{memberId,jdbcType=INTEGER}
         </if>
         <if test="start != null and end != null ">
            and #{start,jdbcType=VARCHAR} &lt;= DATE_FORMAT(createDate,'%Y-%m-%d') and DATE_FORMAT(createDate,'%Y-%m-%d') &lt;= #{end,jdbcType=VARCHAR}
         </if>
      </trim>
      order by createDate DESC
  </select>
  
  <!-- 查找月统计情况 -->
  <select id="queryMonthStatistic" resultMap="MonthResultMap" parameterType="java.lang.String">
      SELECT count(*) as count,payType,payStatus,agentId from comsume_log where DATE_FORMAT(createDate,'%Y-%m')  = #{date,jdbcType=VARCHAR} GROUP BY payType,payStatus,agentId HAVING payStatus in(2,3,4)  order by agentId DESC   
  </select>
  
  <!-- 查找数量 --> 
  <select id="count" resultType="int"  parameterType="java.util.Map">
    select count(id) from comsume_log
     <trim prefix="where" prefixOverrides="and | or">
      <if test="agentId != null" >
        and agentId = #{agentId,jdbcType=INTEGER}
      </if>
      <if test="payStatus != null" >
        and payStatus = #{payStatus,jdbcType=TINYINT}
      </if>
      <if test="createDate != null" >
        and DATE_FORMAT(createDate,'%Y-%m-%d') = #{createDate,jdbcType=VARCHAR}
      </if>
    </trim>
  </select>
  
  <!-- 今日支付方式分布图 -->
  <select id="payTypeChart" resultType="java.util.Map"  parameterType="java.util.Map">
    SELECT count(*) as count,payType from comsume_log where DATE_FORMAT(createDate,'%Y-%m-%d') = #{createDate,jdbcType=VARCHAR} 
    and  payStatus =2 and agentId= #{agentId,jdbcType=INTEGER}  GROUP BY payType
  </select>
  
  <!-- 删除 -->
  <delete id="deleteById" parameterType="java.lang.String" >
      delete from comsume_log where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量删除 -->
  <delete id="deleteByIds" parameterType="java.lang.String">
      delete from comsume_log where id in
      <foreach item="id" collection="array" open="(" separator="," close=")">
          #{id}
      </foreach>
  </delete>
  
  <!--部分字段允许为空-->
  <insert id="add" parameterType="com.haiyi.domain.ComsumeLog" >
    insert into comsume_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="comsumeLog != null" >
            comsumeLog,
        </if>
        orderId,
        <if test="memberId != null" >
            memberId,
        </if>
        <if test="memberName != null" >
            memberName,
        </if>
        devName,
        devNum,
        <if test="payType != null and payType != ''" >
            payType,
        </if>
        payAmount,
        <if test="cardNum != null and cardNum != ''" >
            cardNum,
        </if>
        createDate,
        tradeType,
        payStatus,
        agentId,
        modifyTime
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        <if test="comsumeLog != null" >
            #{comsumeLog,jdbcType=VARCHAR},
        </if>
        #{orderId,jdbcType=VARCHAR},
        <if test="memberId != null" >
            #{memberId,jdbcType=INTEGER},
        </if>
        <if test="memberName != null" >
            #{memberName,jdbcType=VARCHAR},
        </if>
        #{devName,jdbcType=VARCHAR},
        #{devNum,jdbcType=VARCHAR},
        <if test="payType != null and payType != ''" >
            #{payType,jdbcType=INTEGER},
        </if>
        #{payAmount,jdbcType=DECIMAL},
        <if test="cardNum != null and cardNum != ''" >
            #{cardNum,jdbcType=VARCHAR},
        </if>
        #{createDate,jdbcType=TIMESTAMP},
        #{tradeType,jdbcType=TINYINT},
        #{payStatus,jdbcType=TINYINT},
        #{agentId,jdbcType=INTEGER},
        #{createDate,jdbcType=TIMESTAMP}
    </trim>
  </insert>
  
  <!--更新--> 
  <update id="update" parameterType="com.haiyi.domain.ComsumeLog" >
      update comsume_log
      <set>
          <if test="comsumeLog != null" >
              comsumeLog = #{comsumeLog,jdbcType=VARCHAR},
          </if>
          <if test="payStatus != null" >
              payStatus = #{payStatus},
          </if>
          <if test="payType != null" >
              payType = #{payType},
          </if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
	
  <!-- 更新订单的状态 -->
  <update id="updateStatus">
      update comsume_log set payStatus = #{payStatus,jdbcType=TINYINT} where orderId = #{orderId,jdbcType=VARCHAR}
  </update>
	
</mapper>
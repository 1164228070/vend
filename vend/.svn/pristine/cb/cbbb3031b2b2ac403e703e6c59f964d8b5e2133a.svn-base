package com.haiyi.service.impl;

import com.haiyi.dao.ComsumeDetailMapper;
import com.haiyi.dao.base.BaseDao;
import com.haiyi.domain.ComsumeDetail;
import com.haiyi.query.ComsumeDetailQuery;
import com.haiyi.service.ComsumeDetailService;
import com.haiyi.service.ComsumeLogService;
import com.haiyi.utils.StatusConstant;
import com.maizi.exception.KPException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.List;
import java.util.Map;

@Service
public class ComsumeDetailServiceImpl  implements ComsumeDetailService{

	@Resource
	ComsumeLogService comsumeLogService;

	protected BaseDao<ComsumeDetail,ComsumeDetailQuery> daoMapper;
	@Autowired
	public void setComsumeDetailMapper(ComsumeDetailMapper comsumeDetailMapper){
		this.daoMapper = comsumeDetailMapper;
	}

	@Override
	public void add(ComsumeDetail comsumeDetail) throws KPException {
		daoMapper.add(comsumeDetail);
	}

	@Override
	public List<ComsumeDetail> findByOrderId(String orderId) {
		ComsumeDetailQuery comsumeDetailQuery = new ComsumeDetailQuery();
		comsumeDetailQuery.setOrderId(orderId);
		return daoMapper.findBySelective(comsumeDetailQuery);
	}

	/**
	 * 完成一次出货
	 * @param orderId     订单Id
	 * @param orderNum    货道
	 * @param count       上报数量
	 * @return
	 */
	@Override
	public int updateOutputInfo(String orderId, Integer orderNum, int count) {
		//查询是否最后一个订单
		List<Map<String,Object>> unOutputedInfo = comsumeLogService.findUnOutputInfo(orderId);
		//所有的商品都已经出货了
		if(unOutputedInfo==null || unOutputedInfo.size()==0){
             return 0;
		}
		//还有没有出货的
		if(unOutputedInfo.size()==1 && orderNum== unOutputedInfo.get(0).get("orderNum") && "1".equals(unOutputedInfo.get(0).get("outputCount")+"")){
             //说明是最后一个商品,需要将订单的状态修改为已经完成
			comsumeLogService.updateStatus(orderId, StatusConstant.PAY_STATUS_FINISH);
		}
		return ((ComsumeDetailMapper)(daoMapper)).updatefinish(orderId,orderNum,count);
	}
}
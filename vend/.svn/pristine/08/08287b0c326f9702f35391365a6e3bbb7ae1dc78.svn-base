package com.haiyi.netty.server.handler;

import com.maizi.utils.LogUtils;
import io.netty.channel.ChannelHandler;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;

//1. 加上注解标识，表明该 handler 是可以多个 channel 共享的
@ChannelHandler.Sharable
public class PayHandler extends SimpleChannelInboundHandler<PayPacket>{

	private static final PayHandler payHandler = new PayHandler();
	private PayHandler() {
	}
	
	public static PayHandler getInstance() {
		return payHandler;
	}

	/**
	 * 当消息到达时
	 */
	@Override
	protected void channelRead0(ChannelHandlerContext ctx, PayPacket payPacket) throws Exception {
		LogUtils.logInfo("收到客户端[{}]登录请求",payPacket.getNumId());

		PayResponsePacket payResponsePacket = new PayResponsePacket();
		payResponsePacket.setVersion(payPacket.getVersion());

	 //业务处理
		/*Dev dev = pay(payPacket);
		if (dev!=null) {


			//保存Session
			Session session = new Session(payPacket.getDevNum());
			SessionUtil.bindSession(session, ctx.channel());

			PayUtil.markAsPay(ctx.channel());
			payResponsePacket.setSuccess(true);

			Map<String,Object> data = new HashMap<>();

			//查找商品总数量
			//data.put("commodity",devService.productCount(dev.getId()));

			data.put("num",dev.getNum());
			data.put("token",dev.getToken());
			//购买速度
			data.put("speed1",dev.getSpeed1());
			//退货速度
			data.put("speed2",dev.getSpeed2());
			//购买脉冲
			data.put("KD",dev.getKD());
			//退货脉冲
			data.put("KD2",dev.getKD2());
			//感应退款金额
			data.put("CLS",dev.getCSL());

			//是否可退货(1为可退，2为不可退）
			data.put("TF",dev.getTF());
			//退货模式(0为高电平，1为代电平）
			data.put("TFType",dev.getTFType());
			//退货比例
			data.put("TBPercentage",dev.getTBPercentage());
			//购买比例
			data.put("TFMS",dev.getTFMS());
			//绑定商品数量
			data.put("commodity",dev.getCommodity());
			//支付类型
			data.put("tradeWay",dev.getTradeWay());
			payResponsePacket.setData(data);
			LogUtils.logInfo("客户端[{}]登录成功",payPacket.getDevNum());
		} else {
			payResponsePacket.setMsg("账号密码校验失败");
			payResponsePacket.setSuccess(false);
			LogUtils.logInfo("客户端[{}]登录失败",payPacket.getDevNum());
		}

		ctx.channel().writeAndFlush(payResponsePacket);*/
	}


}

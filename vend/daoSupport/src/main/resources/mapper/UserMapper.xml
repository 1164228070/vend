<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haiyi.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.haiyi.domain.User" >
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="openId" property="openId" jdbcType="VARCHAR" />
      <result column="age" property="age" jdbcType="INTEGER" />
      <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="loginName" property="loginName" jdbcType="VARCHAR" />
      <result column="admin" property="admin" jdbcType="BIT" />

      <result column="leftMoney" property="leftMoney" jdbcType="DECIMAL" />
      <result column="lockMoney" property="lockMoney" jdbcType="DECIMAL" />
      <result column="rate" property="rate" jdbcType="DECIMAL" />
      <result column="score" property="score" jdbcType="INTEGER" />

      
      <result column="status" property="status" jdbcType="INTEGER" />
      <result column="agentId" property="agentId" jdbcType="INTEGER" />
      <result column="agentName" property="agentName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
      id,
      name,
      openId,
      age,
      email,
      loginName,
      admin,
      leftMoney,
      lockMoney,
      rate,
      score,
      status,
      agentId,
      agentName
  </sql>

  <!--根据Id查询-->
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
      select <include refid="Base_Column_List" /> from t_user where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <!-- 多条件查询 -->
  <select id="findBySelective" resultMap="BaseResultMap" parameterType="com.haiyi.query.UserQuery">
      select <include refid="Base_Column_List" /> from t_user
      <trim prefix="where" prefixOverrides="and |or ">
         <if test="name != null and name != ''">
            <bind name="likeName" value="'%' + _parameter.name + '%'" />
            and name like #{likeName,jdbcType=VARCHAR}
         </if>
         <if test="loginName != null and loginName != ''">
            <bind name="likeLoginName" value="'%' + _parameter.loginName + '%'" />
            and loginName like #{likeLoginName,jdbcType=VARCHAR}
         </if>
          <if test="status != null and status != ''">
              and status = #{status}
          </if>
         <if test="agentId != null and agentId != ''">
            and agentId = #{agentId,jdbcType=VARCHAR}
         </if>
         <if test="agentName != null and agentName != ''">
          and agentName = #{agentName,jdbcType=VARCHAR}
         </if>
      </trim>
      order by id DESC
  </select>
  
  
  <!-- 删除 -->
  <delete id="deleteById" parameterType="java.lang.String" >
      delete from t_user where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量删除 -->
  <delete id="deleteByIds" parameterType="java.lang.String">
      delete from t_user where id in
      <foreach item="id" collection="array" open="(" separator="," close=")">
          #{id}
      </foreach>
  </delete>



  
  <!--部分字段允许为空-->
  <insert id="add" parameterType="com.haiyi.domain.User" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
        id,
        name,
        <if test="openId != null" >
            openId,
        </if>
        age,
        email,
        loginName,
        password,
        <if test="admin != null" >
            admin,
        </if>
        <if test="leftMoney != null" >
            leftMoney,
        </if>
        <if test="lockMoney != null" >
            lockMoney,
        </if>
        <if test="rate != null" >
            rate,
        </if>
        <if test="score != null" >
            score,
        </if>
        status,
        agentId,
        agentName
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{id,jdbcType=INTEGER},
        #{name,jdbcType=VARCHAR},
        <if test="openId != null" >
            #{openId,jdbcType=VARCHAR},
        </if>
        #{age,jdbcType=INTEGER},
        #{email,jdbcType=VARCHAR},
        #{loginName,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        <if test="admin != null" >
            #{admin,jdbcType=BIT},
        </if>
        <if test="leftMoney != null" >
            #{leftMoney,jdbcType=DECIMAL},
        </if>
        <if test="lockMoney != null" >
            #{lockMoney,jdbcType=DECIMAL},
        </if>
        <if test="rate != null" >
            #{rate,jdbcType=DECIMAL},
        </if>
        <if test="score != null" >
            #{score,jdbcType=INTEGER},
        </if>
        #{status,jdbcType=INTEGER},
        #{agentId,jdbcType=INTEGER},
        #{agentName,jdbcType=VARCHAR}
    </trim>
  </insert>
  
  <!--更新--> 
  <update id="update" parameterType="com.haiyi.domain.User" >
      update t_user
      <set>
          <if test="name != null and name != ''" >
              name = #{name,jdbcType=VARCHAR},
          </if>
          <if test="openId != null and openId != ''" >
              openId = #{openId,jdbcType=VARCHAR},
          </if>
          <if test="age != null" >
              age = #{age,jdbcType=INTEGER},
          </if>
          <if test="email != null and email != ''" >
              email = #{email,jdbcType=VARCHAR},
          </if>
          <if test="loginName != null and loginName != ''" >
              loginName = #{loginName,jdbcType=VARCHAR},
          </if>
          <if test="admin != null" >
              admin = #{admin,jdbcType=BIT},
          </if>
          <if test="leftMoney != null" >
              leftMoney = #{leftMoney,jdbcType=DECIMAL},
          </if>
          <if test="lockMoney != null" >
              lockMoney = #{lockMoney,jdbcType=DECIMAL},
          </if>
          <if test="rate != null" >
              rate = #{rate,jdbcType=DECIMAL},
          </if>
          <if test="score != null" >
              score = #{score,jdbcType=INTEGER},
          </if>
          <if test="agentId != null" >
              agentId = #{agentId,jdbcType=INTEGER},
          </if>
          <if test="status != null" >
              status = #{status,jdbcType=INTEGER},
          </if>
          <if test="agentName != null" >
              agentName = #{agentName,jdbcType=VARCHAR},
          </if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--更新密码--> 
  <update id="updatePassword">
      update t_user set password = #{password,jdbcType=VARCHAR} where id = #{userId,jdbcType=INTEGER} and agentId = #{agentId,jdbcType=INTEGER}
  </update>

    <!--单个修改费率-->
    <update id="updateRateById">
        update t_user set rate = #{rate} where id = #{id}
    </update>
    <!--单个修改openId-->
    <update id="updateOpenIdById">
        update t_user set openId = #{openId} where id = #{id}
    </update>

  <!--登录-->
  <select id="login" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" /> from t_user where loginName = #{loginName,jdbcType=VARCHAR} AND password = #{password,jdbcType=VARCHAR}
  </select>

    <select id="findByOpenId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_user where openId = #{openId,jdbcType=VARCHAR}
    </select>
	
</mapper>